"# UI Layout {{{
set number
set showcmd
set nocursorline
set wildmenu
set lazyredraw
set showmatch
set fillchars+=vert:â”ƒ
" }}}

" Searching {{{
set smartcase
set incsearch
set hlsearch
" }}}

" Spaces & Tabs {{{
set tabstop=4
set expandtab
set softtabstop=4
set shiftwidth=4
set modelines=1
filetype indent on
filetype plugin on
set autoindent
" }}}

" Folding {{{
set foldmethod=indent
set foldnestmax=10
set foldenable
nnoremap <space> za
set foldlevelstart=10
"}}}

" Leader Shortcuts {{{
let mapleader=","
nnoremap <leader><space> :nohlsearch<CR>
nnoremap <leader>l :call <SID>ToggleNumber()<CR>
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
" }}}
inoremap jj <esc>
cnoremap w!! execute 'silent! write !sudo tee % >/dev/null' <bar> edit!

" CtrlP {{{
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_custom_ignore = '\vbuild/|dist/|venv/|target/|\.(o|swp|pyc|egg)$'
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
" }}}

" Autogroups {{{
augroup configgroup
    autocmd!
    autocmd FileType yaml setlocal tabstop=2
    autocmd FileType yaml setlocal shiftwidth=2
    autocmd FileType yaml setlocal softtabstop=2
augroup END

au BufReadPost *.tmpl set filetype=gohtmltmpl
" {{{


" Vim Plug {{
call plug#begin('~/.vim/plugged')
Plug 'editorconfig/editorconfig-vim'
Plug 'bling/vim-airline'
Plug 'kien/ctrlp.vim'
Plug 'vimwiki/vimwiki'
Plug 'fatih/vim-go'
call plug#end()
" }}}

" Custom Functions {{{
function! <SID>ToggleNumber()
    if(&relativenumber == 1)
        set norelativenumber
        set number
    else
        set relativenumber
    endif
endfunc
" }}}
